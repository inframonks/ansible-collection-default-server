---
- name: "Combine users"
  ansible.builtin.set_fact:
    users_list: >-
      {{
        (users_defaults | default([])) +
        (users_group_vars | default([])) +
        (users_host_vars | default([])) +
        (users_playbook | default([]))
      | unique
      }}
  tags: users

- name: Debug users_list
  ansible.builtin.debug:
    var: users_list
  tags: users

- name: Install package sudo
  ansible.builtin.package:
    name: sudo
    state: present
  become: true
  tags: users

- name: Remove old homes
  ansible.builtin.file:
    path: '/home/{{ user_item.name }}'
    state: absent
  loop: "{{ users_list }}"
  loop_control:
    loop_var: user_item
  when: 
    - users_list is defined
    - users_list | length > 0
    - user_item.state is defined
    - user_item.state == 'absent'
  become: true
  tags: users

- name: Manage users
  ansible.builtin.user:
    name: "{{ user_item.name }}"
    comment: "{{ user_item.fullname | default(omit) }}"
    shell: "{{ user_item.shell | default('/bin/bash') }}"
    append: true
    create_home: true
    state: "{{ user_item.state | default('present') }}"
    system: "{{ user_item.system_account | default(false) }}"
    password: "{{ user_item.password | default(omit) if user_item.password is defined else omit }}"
    update_password: on_create
  loop: "{{ users_list }}"
  loop_control:
    loop_var: user_item
  when: 
    - users_list is defined
    - users_list | length > 0
    - user_item.name is defined
    - user_item.name is match("^[a-z_][a-z0-9_-]*[$]?$")
  become: true
  tags: users

- name: Manage authorized keys
  ansible.posix.authorized_key:
    user: "{{ auth_key_item.0.name }}"
    key: "{{ auth_key_item.1 }}"
  loop: "{{ users_list | subelements('authorized_keys', skip_missing=True) }}"
  loop_control:
    loop_var: auth_key_item
  when: 
    - users_list is defined
    - users_list | length > 0
    - auth_key_item.1 is defined 
    - auth_key_item.1 | length > 0
    - auth_key_item.0.state | default('present') == 'present'
  become: true
  tags: users

- name: Manage sudoer files
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/user_{{ sudo_item.name }}"
    line: "{{ sudo_item.name }} {{ sudo_item.cmd | default('ALL=(ALL) NOEXEC: /bin/false') }}"
    state: "{{ sudo_item.sudo | default(false) | ternary('present', 'absent') }}"
    mode: "0440"
    create: true
    validate: 'visudo -cf %s'
  loop: "{{ users_list }}"
  loop_control:
    loop_var: sudo_item
  when:
    - users_list is defined
    - users_list | length > 0
    - sudo_item.name is defined
    - sudo_item.state | default('present') == 'present'
  become: true
  tags: users

- name: Manage bash_files
  ansible.builtin.copy:
    src: "{{ bash_file_item.1.name }}"
    dest: "/home/{{ bash_file_item.0.name }}/.{{ bash_file_item.1.name | basename }}"
    owner: "{{ bash_file_item.0.name }}"
    group: "{{ bash_file_item.0.name }}"
    mode: "{{ bash_file_item.1.mode }}"
  loop: "{{ users_list | subelements('bash_files', skip_missing=True) }}"
  loop_control:
    loop_var: bash_file_item
    label: "{{ bash_file_item.0.name }} -> {{ bash_file_item.1.name }}"
  when:
    - users_list is defined
    - users_list | length > 0
    - bash_file_item.0.state | default('present') == 'present'
  become: true
  tags: users

- name: Copy scripts
  ansible.builtin.copy:
    src: "{{ item.source }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - source: git-prompt.sh
      dest: "/etc/profile.d/git-prompt.sh"
      mode: "0755"
    - source: ssh-agent.sh
      dest: "/etc/profile.d/ssh-agent.sh"
      mode: "0755"
    - source: bcrypt
      dest: "/usr/local/bin/bcrypt"
      mode: "0755"
  become: true
  tags: users

- name: Copy dot files for root
  ansible.builtin.copy:
    src: "{{ item.source }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - source: ms.sh
      dest: "/root/.ms.sh"
      mode: "0755"
    - source: tmux.conf
      dest: "/root/.tmux.conf"
      mode: "0644"
    - source: vimrc
      dest: "/root/.vimrc"
      mode: "0644"
    - source: gitconfig
      dest: "/root/.gitconfig"
      mode: "0644"
  become: true
  tags: users

- name: Check if /etc/msmtprc exists
  ansible.builtin.stat:
    path: /etc/msmtprc
  register: msmtprc_stat

- name: Copy /etc/msmtprc to users home directories
  ansible.builtin.copy:
    src: "/etc/msmtprc"
    dest: "/home/{{ msmtp_user.name }}/.msmtprc"
    owner: "{{ msmtp_user.name }}"
    group: "{{ msmtp_user.name }}"
    mode: "0600"
    remote_src: true
  loop: "{{ users_list }}"
  loop_control:
    loop_var: msmtp_user
  become: true
  when:
    - users_list is defined
    - users_list | length > 0
    - msmtp_user.name != 'root'
    - msmtp_user.state | default('present') == 'present'
    - msmtprc_stat.stat.exists
  tags: users

- name: Replace logfile path in /etc/msmtprc to ~/.msmtp.log
  ansible.builtin.replace:
    path: "/home/{{ msmtp_replace_user.name }}/.msmtprc"
    regexp: '^logfile.*'
    replace: "logfile         ~/.msmtp.log"
  loop: "{{ users_list }}"
  loop_control:
    loop_var: msmtp_replace_user
  become: true
  when:
    - users_list is defined
    - users_list | length > 0
    - msmtp_replace_user.name != 'root'
    - msmtp_replace_user.state | default('present') == 'present'
    - msmtprc_stat.stat.exists
  tags: users
